"""
Summary Component: Create HTML dashboard with all visualizations
Input: /mnt/data/outputs/week_current/*/result.png
Output: /mnt/data/outputs/week_current/summary.html
"""

import sys
from pathlib import Path
import base64

def create_summary():
    """Create HTML summary dashboard"""
    print(f"\n{'='*60}")
    print(f"CREATING SUMMARY DASHBOARD")
    print(f"{'='*60}")

    try:
        # Paths
        output_dir = Path("/mnt/data/outputs/week_current")
        summary_file = output_dir / "summary.html"

        # Find all result images
        patient_ids = ["spleen_12", "spleen_19", "spleen_29", "spleen_9"]

        print(f"[Step 1/2] Collecting visualizations...")
        visualizations = []

        for patient_id in patient_ids:
            result_file = output_dir / patient_id / "result.png"
            if result_file.exists():
                print(f"  Found: {patient_id}/result.png")
                # Read and encode image as base64
                with open(result_file, 'rb') as f:
                    img_data = base64.b64encode(f.read()).decode('utf-8')
                visualizations.append({
                    'id': patient_id,
                    'data': img_data
                })
            else:
                print(f"  Missing: {patient_id}/result.png")

        if not visualizations:
            raise FileNotFoundError("No visualizations found!")

        # Create HTML
        print(f"[Step 2/2] Creating HTML dashboard...")
        html_content = f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spleen Segmentation Pipeline Results</title>
    <style>
        body {{
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }}
        h1 {{
            text-align: center;
            color: #333;
            margin-bottom: 10px;
        }}
        .subtitle {{
            text-align: center;
            color: #666;
            margin-bottom: 30px;
            font-size: 14px;
        }}
        .container {{
            max-width: 1400px;
            margin: 0 auto;
        }}
        .result {{
            background: white;
            padding: 20px;
            margin-bottom: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }}
        .result h2 {{
            margin-top: 0;
            color: #444;
            border-bottom: 2px solid #4CAF50;
            padding-bottom: 10px;
        }}
        .result img {{
            width: 100%;
            height: auto;
            border: 1px solid #ddd;
            border-radius: 4px;
        }}
        .stats {{
            background: #e3f2fd;
            padding: 15px;
            margin-top: 15px;
            border-left: 4px solid #2196F3;
        }}
        .stats p {{
            margin: 5px 0;
        }}
        .footer {{
            text-align: center;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #ddd;
            color: #888;
            font-size: 12px;
        }}
    </style>
</head>
<body>
    <div class="container">
        <h1>üè• Spleen Segmentation Pipeline Results</h1>
        <div class="subtitle">MONAI Pretrained Model | Kubeflow Pipeline Execution</div>

        <div class="stats">
            <p><strong>Pipeline Status:</strong> ‚úÖ Completed Successfully</p>
            <p><strong>Total Patients Processed:</strong> {len(visualizations)}</p>
            <p><strong>Model:</strong> MONAI UNet (Pretrained on Task09_Spleen)</p>
        </div>
"""

        # Add each visualization
        for viz in visualizations:
            html_content += f"""
        <div class="result">
            <h2>Patient: {viz['id']}</h2>
            <img src="data:image/png;base64,{viz['data']}" alt="{viz['id']} visualization">
        </div>
"""

        html_content += """
        <div class="footer">
            <p>Generated by Kubeflow Pipeline | MONAI Spleen Segmentation</p>
        </div>
    </div>
</body>
</html>
"""

        # Save HTML
        with open(summary_file, 'w', encoding='utf-8') as f:
            f.write(html_content)

        print(f"  Saved: summary.html")
        print(f"  Total visualizations: {len(visualizations)}")
        print(f"[OK] Summary dashboard created!")
        return 0

    except Exception as e:
        print(f"[ERROR] Summary creation failed: {e}")
        import traceback
        traceback.print_exc()
        return 1

if __name__ == "__main__":
    sys.exit(create_summary())
